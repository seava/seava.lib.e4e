<project name="DistributionPackageBuilder.download" default="download" basedir="." xmlns:ac="antlib:net.sf.antcontrib">
	<description>Download components.</description>
	<property file="pack.properties" />


	<target name="download" depends="createDirs,downloadCore">
	</target>


	<target name="createDirs">
		<mkdir dir="${tempFolder}/maven-metadata" />
		<mkdir dir="${tempFolder}/core" />
		<mkdir dir="${tempFolder}/no-version-bundles" />
	</target>


	<!-- ========================================================================================== -->
	<!-- =============================== DOWNLOAD - CORE ========================================== -->
	<!-- ========================================================================================== -->

	<target name="downloadCore">
		<echo>Downloading components...</echo>
		<ac:for list="${coreBundles}" param="bundle">
			<sequential>
				<ac:var name="extension" value="jar" />
				<ac:var name="copyAs" value="" />
				<ac:var name="saveCloneWithoutVersion" value="true" />
				<get-dnet-artifact artifactId="seava.e4e.@{bundle}" extension="${extension}" downloadpath="core" copyAs="${copyAs}" saveclonewithoutversion="${saveCloneWithoutVersion}" />
			</sequential>
		</ac:for>
	</target>


	<!-- ========================================================================================== -->
	<!-- ================================= DOWNLOAD - Macro ======================================= -->
	<!-- ========================================================================================== -->

	<macrodef name="get-dnet-artifact">
		<attribute name="artifactId" />
		<attribute name="extension" />
		<attribute name="downloadPath" />
		<attribute name="copyAs" />
		<attribute name="saveCloneWithoutVersion" />

		<sequential>
			<ac:var name="buildId" value="" />
			<ac:var name="snapshotTag" value="" />
			<ac:var name="mavenRepoUrl" value="${mavenReleaseRepoUrl}" />
			<ac:if>
				<equals arg1="${snapshot}" arg2="true" />
				<then>
					<ac:var name="snapshotTag" value="-SNAPSHOT" />
					<ac:var name="mavenRepoUrl" value="${mavenSnapshotRepoUrl}" />

					<echo>Resolving latest snapshot of @{artifactId}-${productVersion}...</echo>
					<get ignoreerrors="true" src="${mavenRepoUrl}/${productGroupIdAsPath}/@{artifactId}/${productVersion}${snapshotTag}/maven-metadata.xml" dest="${tempFolder}/maven-metadata/@{artifactId}.xml" />
					<ac:if>
						<available file="${tempFolder}/maven-metadata/@{artifactId}.xml" />
						<then>
							<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" />
							<xmltask source="${tempFolder}/maven-metadata/@{artifactId}.xml">
								<call path="/metadata/versioning/snapshot">
									<param name="timestamp" path="/metadata/versioning/snapshot/timestamp/text()" />
									<param name="buildNumber" path="/metadata/versioning/snapshot/buildNumber/text()" />
									<actions>
										<ac:var name="buildId" value="-@{timestamp}-@{buildNumber}" />
									</actions>
								</call>
							</xmltask>
						</then>
					</ac:if>
				</then>
				<else>
					<ac:if>
						<and>
							<not>
								<equals arg1="${snapshot}" arg2="true" />
							</not>
							<not>
								<equals arg1="${stagingRepos}" arg2="" />
							</not>
						</and>
						<then>
							<ac:var name="mavenRepoUrl" value="${mavenStagingRepoUrl}" />
						</then>
					</ac:if>
				</else>
			</ac:if>

			<ac:if>
				<and>
					<not>
						<equals arg1="${snapshot}" arg2="true" />
					</not>
					<not>
						<equals arg1="${stagingRepos}" arg2="" />
					</not>
				</and>

				<then>
					<ac:var name="targetFile" value="${tempFolder}/@{downloadPath}/@{artifactId}-${productVersion}${buildId}.@{extension}" />
					<echo>Downloading @{artifactId}-${productVersion}${buildId} from staging repo...</echo>
					<ac:for list="${stagingRepos}" param="suffix">
						<sequential>
							<ac:if>
								<not>
									<available file="${targetFile}" />
								</not>
								<then>
									<get dest="${targetFile}" ignoreerrors="true" src="${mavenRepoUrl}@{suffix}/${productGroupIdAsPath}/@{artifactId}/${productVersion}${snapshotTag}/@{artifactId}-${productVersion}${buildId}.@{extension}" />
								</then>
							</ac:if>
						</sequential>
					</ac:for>
				</then>
				<else>
					<echo>Downloading @{artifactId}-${productVersion}${buildId}...</echo>
					<get ignoreerrors="true" src="${mavenRepoUrl}/${productGroupIdAsPath}/@{artifactId}/${productVersion}${snapshotTag}/@{artifactId}-${productVersion}${buildId}.@{extension}" dest="${tempFolder}/@{downloadPath}/@{artifactId}-${productVersion}${buildId}.@{extension}" />
				</else>
			</ac:if>
			<ac:if>
				<equals arg1="@{copyAs}" arg2="" />
				<then>
				</then>
				<else>
					<ac:if>
						<available file="${tempFolder}/@{downloadPath}/@{artifactId}-${productVersion}${buildId}.@{extension}" />
						<then>
							<copy file="${tempFolder}/@{downloadPath}/@{artifactId}-${productVersion}${buildId}.@{extension}" tofile="${tempFolder}/@{copyAs}" />
						</then>
					</ac:if>
				</else>
			</ac:if>

			<!-- Save a copy of this bundle with version stripped from its name -->

			<ac:if>
				<equals arg1="@{saveCloneWithoutVersion}" arg2="true" />
				<then>
					<ac:if>
						<available file="${tempFolder}/@{downloadPath}/@{artifactId}-${productVersion}${buildId}.@{extension}" />
						<then>
							<copy file="${tempFolder}/@{downloadPath}/@{artifactId}-${productVersion}${buildId}.@{extension}" tofile="${tempFolder}/no-version-bundles/@{artifactId}.@{extension}" />
						</then>
					</ac:if>
				</then>
			</ac:if>
		</sequential>
	</macrodef>


</project>